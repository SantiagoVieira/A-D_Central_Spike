# -*- coding: utf-8 -*-
"""taller.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/155U6Ho3vMuLHcbozYck1E4_fROKuNq4B
"""

def regla_matriz (row, col, n):
    return (n - 1 - row) + (n - 1 - col)

def camino_optimo(matrix):
    n = len(matrix)
    if not matrix or matrix[0][0] == 1 or matrix[n-1][n-1] == 1:
        return None

    path = []
    row, col = 0, 0

    while (row, col) != (n-1, n-1):
      path.append((row, col))
      if row == n-1:
        col += 1
      elif col == n-1:
        row += 1
      else:
        right_matriz = regla_matriz(row, col + 1, n)
        down_matriz = regla_matriz(row + 1, col, n)
        if right_matriz <= down_matriz:
          col += 1
        else:
          row += 1

        if matrix[row][col] == 1:
            return None

    path.append((n-1, n-1))

    return path

matrix = [
    [0, 0, 0],
    [0, 1, 0],
    [0, 0, 0]
]

camino = camino_optimo(matrix)
if camino:
    print("Camino óptimo:", camino)
else:
    print("No se encontró un camino óptimo.")